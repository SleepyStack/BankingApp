# Banking App - TODO List

This is a running TODO for remaining and upcoming tasks in the Banking App project. Use this as a checklist and planning document. Update as you make progress or reprioritize!

---

## Core Backend

- [x] User registration and authentication (JWT, password hashing)
- [x] User CRUD (Create, Read, Update, Delete)
- [x] Account creation and management
- [x] Account types (CRUD)
- [x] Transactions: deposit, withdrawal, transfer
- [x] Basic transaction history

---

## Remaining/Upcoming Backend Features

### 1. User and Account Improvements
- [x] Email/phone uniqueness validation & better error reporting
- [x] Add user status (active, locked, etc.) enforcement in authentication
- [x] Add endpoint to change password (with old password check)
- [X] User activity logging (last login, failed login attempts, etc.)
- [X] Account closure (soft delete or status flag)

### 2. Transactions/Banking Logic
- [X] Transaction reversal/refund (admin-only)
- [X] Pagination & filtering for transaction history

### 3. Security & Validation
- [X] Rate limiting for login and sensitive endpoints
- [X] Audit log for admin actions (deleting users/accounts, etc.)
- [X] Input validation improvements across all endpoints

### 4. Admin/Operator Features
- [X] Admin endpoints for user/account management
- [X] Role-based access control (RBAC): restrict actions based on roles

---

## API & Documentation

- [ ] Review and improve Swagger/OpenAPI docs
- [X] Add example requests/responses
- [X] Document error responses and status codes

---

## Testing

- [ ] Write unit tests for services (UserService, AccountService, etc.)
- [ ] Write integration tests for controllers
- [ ] Test transaction edge cases: overdraft, concurrent transfers, etc.

---

## Frontend (for future/when ready)

- [ ] Decide on stack (React, Angular, etc.)
- [ ] Build login/register UI flows
- [ ] User dashboard (accounts, balances, transaction history)
- [ ] Transfer/deposit/withdraw screens
- [ ] Admin panel (optional)

---

## DevOps/Deployment

- [ ] Dockerize backend
- [ ] Add configuration for MongoDB (prod/dev)
- [ ] Setup environment variable management (.env)
- [ ] Prepare for deployment: Heroku, AWS, etc.
